<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AR.js Bouncing Cube with Recording</title>
    <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
    <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js"></script>
    <style>
        .ar-controls {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1000;
            display: flex;
            gap: 10px;
        }
        .ar-button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body style="margin: 0; overflow: hidden;">
    <a-scene embedded arjs='sourceType: webcam; debugUIEnabled: false;'>
        <a-marker preset="hiro">
            <a-box position="0 0.5 0" material="color: #4CC3D9">
                <a-animation attribute="position"
                             dur="2000"
                             direction="alternate"
                             easing="ease-in-out-cubic"
                             to="0 1.5 0"
                             repeat="indefinite"></a-animation>
            </a-box>
        </a-marker>
        <a-entity camera></a-entity>
    </a-scene>

    <div class="ar-controls">
        <button id="recordButton" class="ar-button">Start Recording</button>
        <button id="captureButton" class="ar-button">Capture Image</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const recordButton = document.getElementById('recordButton');
            const captureButton = document.getElementById('captureButton');
            let mediaRecorder;
            let recordedChunks = [];

            // Recording functionality
            recordButton.addEventListener('click', function() {
                if (mediaRecorder && mediaRecorder.state === 'recording') {
                    mediaRecorder.stop();
                    recordButton.textContent = 'Start Recording';
                } else {
                    navigator.mediaDevices.getDisplayMedia({ video: true })
                        .then(stream => {
                            mediaRecorder = new MediaRecorder(stream);
                            mediaRecorder.ondataavailable = event => {
                                if (event.data.size > 0) {
                                    recordedChunks.push(event.data);
                                }
                            };
                            mediaRecorder.onstop = () => {
                                const blob = new Blob(recordedChunks, { type: 'video/webm' });
                                const url = URL.createObjectURL(blob);
                                const a = document.createElement('a');
                                a.style.display = 'none';
                                a.href = url;
                                a.download = 'ar-recording.webm';
                                document.body.appendChild(a);
                                a.click();
                                setTimeout(() => {
                                    document.body.removeChild(a);
                                    window.URL.revokeObjectURL(url);
                                }, 100);
                                recordedChunks = [];
                            };
                            mediaRecorder.start();
                            recordButton.textContent = 'Stop Recording';
                        });
                }
            });

            // Image capture functionality
            captureButton.addEventListener('click', function() {
                const canvas = document.querySelector('a-scene').components.screenshot.getCanvas('perspective');
                const imageDataUrl = canvas.toDataURL('image/png');
                const a = document.createElement('a');
                a.href = imageDataUrl;
                a.download = 'ar-capture.png';
                a.click();
            });
        });
    </script>
</body>
</html>
