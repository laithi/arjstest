<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic WebXR Test</title>
    <style>
        body { margin: 0; }
        #status {
            position: fixed;
            top: 10px;
            left: 10px;
            background: black;
            color: white;
            padding: 10px;
            font-family: monospace;
            z-index: 999;
        }
    </style>
</head>
<body>
    <div id="status">Starting...</div>
    
    <script async src="https://unpkg.com/es-module-shims/dist/es-module-shims.js"></script>
    
    <script type="importmap">
    {
        "imports": {
            "three": "https://unpkg.com/three@0.157.0/build/three.module.js",
            "three/addons/": "https://unpkg.com/three@0.157.0/examples/jsm/"
        }
    }
    </script>

    <script type="module">
        import * as THREE from 'three';
        import { ARButton } from 'three/addons/webxr/ARButton.js';

        const status = document.getElementById('status');
        
        function log(message) {
            console.log(message);
            status.innerHTML += '<br>' + message;
        }

        // Check for WebXR support
        if (!navigator.xr) {
            log('WebXR not supported by this browser');
        } else {
            log('WebXR found, checking AR...');
        }

        // Initialize Three.js
        const scene = new THREE.Scene();
        log('Scene created');

        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        log('Camera created');

        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.xr.enabled = true;
        document.body.appendChild(renderer.domElement);
        log('Renderer created');

        // Add a simple cube
        const geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);
        const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });
        const cube = new THREE.Mesh(geometry, material);
        cube.position.z = -0.5;  // Place it half a meter in front
        scene.add(cube);
        log('Added red cube');

        // Add some light
        const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);
        scene.add(light);
        log('Added light');

        // Check AR support and create button
        navigator.xr.isSessionSupported('immersive-ar')
            .then((supported) => {
                if (supported) {
                    log('AR is supported!');
                    const button = ARButton.createButton(renderer);
                    document.body.appendChild(button);
                    log('AR button created');
                } else {
                    log('AR not supported on this device');
                }
            })
            .catch(err => {
                log('Error checking AR support: ' + err);
            });

        // Animation loop
        renderer.setAnimationLoop(function () {
            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
            renderer.render(scene, camera);
        });

        // Handle window resizing
        window.addEventListener('resize', onWindowResize, false);

        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }
    </script>
</body>
</html>
